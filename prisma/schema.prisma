// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    ExpenseTrackerTransactions  ExpenseTrackerTransaction[]
    deletedAt     DateTime?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model ExpenseTrackerTransaction {
    id          String      @id @default(cuid())
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    deletedAt   DateTime?
    
    date        DateTime    // 날짜
    time        DateTime    // 시간
    type        TransactionType // 지출/수입
    
    mainCategory    String  // 대분류
    subCategory     String  // 소분류
    description     String  // 내용
    
    amount      Float       // 금액
    currency    String      // 화폐
    paymentMethod String    // 결제수단
    memo        String?     // 메모 (선택사항)
    
    // User 관계 설정
    userId      String
    user        User        @relation(fields: [userId], references: [id])
}

enum TransactionType {
    EXPENSE     // 지출
    INCOME      // 수입
}